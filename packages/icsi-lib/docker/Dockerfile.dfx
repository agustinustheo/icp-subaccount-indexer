FROM node:20-slim

# Install basic dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    wget \
    git \
    build-essential \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Install pnpm and ensure it's available
RUN npm install -g pnpm && \
    ln -s /usr/local/lib/node_modules/.bin/pnpm /usr/local/bin/pnpm || \
    ln -s /usr/local/bin/pnpm /usr/bin/pnpm || \
    which pnpm || \
    echo "PNPM PATH: $(which pnpm || echo 'not found')"

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Install minimal required tools
RUN rustup target add wasm32-unknown-unknown

# Note: DFX and advanced tools will be installed at runtime if needed
# This keeps the image smaller and more maintainable

# Set working directory
WORKDIR /workspace

# Copy dfx configuration
COPY dfx.json .
COPY canister_ids.json .

# Create networks directory for DFX
RUN mkdir -p /root/.config/dfx/networks

# Expose DFX ports
EXPOSE 4943 8000 8080

# Health check for DFX
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:4943/_/api/v2/status || exit 1

# Start DFX in replica mode with old metering
CMD ["dfx", "start", "--clean", "--host", "0.0.0.0:4943", "--artificial-delay", "0"]